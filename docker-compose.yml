version: '3.8'

services:
  backend:
    image: thjeveknc/phoenix-backend:latest
    container_name: backend_gotham
    environment:
      - SECRET_KEY_BASE=GGZsehjQB9/SeBXcwgiXCjf7ufksUV7XmB8wG/76wj6A8p4BsCziCcpQLVjDogFO
      - DATABASE_URL=postgres://postgres:postgres@database:5432/time_manager
    depends_on:
      - database
    networks:
      - app_network
    command: >
      sh -c "
      echo 'Waiting for the database connection...' &&
      until mix ecto.migrate; do
        echo 'Postgres is unavailable - sleeping';
        sleep 2;
      done &&
      echo 'Starting the Phoenix server...' &&
      mix phx.server
      "
    restart: always

  frontend:
    image: thjeveknc/vue-frontend:latest
    container_name: frontend_gotham
    ports:
      - "8080:8080"
      - "443:443"
    networks:
      - app_network
    restart: always

  otel:
    image: otel/opentelemetry-collector-contrib-dev:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - '55681:55681'
      - '55680:55680'
    volumes:
<<<<<<< Updated upstream
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml

  zipkin:
    image: openzipkin/zipkin-slim
    ports:
      - '9411:9411'

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
=======
      - ./otelconfig:/etc/'
>>>>>>> Stashed changes

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=time_manager
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki


networks:
  app_network:
    driver: bridge
  loki:

volumes:
  pgdata:
    driver: local